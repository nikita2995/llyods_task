{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "LLyods task",
        "description": "Swagger UI for LLyods Application",
        "termsOfService": "http://swagger.io/terms/"
    },
    "host": "localhost:5000",
    "basePath": "/api",
    "tags": [
        {
            "name": "Company",
            "description": "API for Company"
        },
        {
            "name": "Admin",
            "description": "API for Admin"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/company/{companyName}": {
            "get": {
                "tags": [
                    "Company"
                ],
                "description": "Fetch Company",
                "operationId": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyName",
                        "in": "path",
                        "description": "Fetch Company Request",
                        "schema": {
                            "$ref": "#/definitions/fetch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company found success response",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Company does not exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Empty field in request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response from DB",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/{companyName}/status": {
            "get": {
                "tags": [
                    "Company"
                ],
                "description": "Check Company Status",
                "operationId": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyName",
                        "in": "path",
                        "description": "Check Company Status Request",
                        "schema": {
                            "$ref": "#/definitions/fetch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company Status success response",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Company does not exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Empty field in request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response from DB",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company": {
            "post": {
                "tags": [
                    "Company"
                ],
                "description": "Create Company",
                "operationId": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "find User Request",
                        "schema": {
                            "$ref": "#/definitions/postCompany"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found success response",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "User does not exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Empty field in request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response from DB",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/company/{companyName}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Fetch Company",
                "operationId": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "companyName",
                        "in": "path",
                        "description": "Fetch Company Request",
                        "schema": {
                            "$ref": "#/definitions/fetch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company found success response",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Company does not exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Empty field in request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response from DB",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/company": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "description": "Fetch All Company",
                "operationId": "",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "All Company success response",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Company does not exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Empty field in request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response from DB",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "description": "Update Company",
                "operationId": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update Company Request",
                        "schema": {
                            "$ref": "#/definitions/putCompany"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Company success response",
                        "schema": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Company does not exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Something went wrong",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Empty field in request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response from DB",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "fetch": {
            "properties": {
                "companyName": {
                    "required": true,
                    "type": "string",
                    "example": "Sample"
                }
            }
        },
        "fetchToken": {
            "properties": {
                "tickerInitial": {
                    "required": true,
                    "type": "string",
                    "example": "0x548425844sf48sf8ds44d4sf8ds"
                }
            }
        },
        "postCompany": {
            "properties": {
                "firstName": {
                    "required": true,
                    "type": "string",
                    "example": "Sample First Name"
                },
                "lastName": {
                    "required": true,
                    "type": "string",
                    "example": "Sample Last Name"
                },
                "email": {
                    "required": true,
                    "type": "string",
                    "example": "sample@gmail.com"
                },
                "companyName": {
                    "required": true,
                    "type": "string",
                    "example": "Sample Company Name"
                },
                "licenseStartDate": {
                    "required": true,
                    "type": "string",
                    "format": "date",
                    "example": "2018-03-20"
                },
                "licenseEndDate": {
                    "required": true,
                    "type": "string",
                    "format": "date",
                    "example": "2018-03-20"
                }
            }
        },
        "putCompany": {
            "properties": {
                "firstName": {
                    "required": true,
                    "type": "string",
                    "example": "Sample First Name"
                },
                "lastName": {
                    "required": true,
                    "type": "string",
                    "example": "Sample Last Name"
                },
                "email": {
                    "required": true,
                    "type": "string",
                    "example": "sample@gmail.com"
                },
                "companyName": {
                    "required": true,
                    "type": "string",
                    "example": "Sample Company Name"
                },
                "licenseStartDate": {
                    "required": true,
                    "type": "string",
                    "format": "date",
                    "example": "2018-03-20"
                },
                "licenseEndDate": {
                    "required": true,
                    "type": "string",
                    "format": "date",
                    "example": "2018-03-20"
                },
                "licenseStatus": {
                    "required": true,
                    "type": "string",
                    "example": "Inactive/Deactive/Active"
                }
            }
        },
        "ErrorResponse": {
            "statusCode": 500,
            "error": "Internal Server Error"
        },
        "SuccessResponse": {
            "statusCode": 200,
            "data": {}
        }
    }
}